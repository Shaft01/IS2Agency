package agencija.security;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter{
	
	@Autowired
	@Qualifier("customUserDetailsService")
	UserDetailsService userDetailsService;
	
	@Override
	public void configure(AuthenticationManagerBuilder auth) throws Exception{
		auth.userDetailsService(userDetailsService).passwordEncoder(new BCryptPasswordEncoder());
	}

	@Override
	protected void configure(HttpSecurity http) throws Exception{
		http.authorizeRequests()
	    .antMatchers("/auth/**")
	    .permitAll()
	   // .antMatchers("/user/**")
	  //  .hasAnyRole("ADMIN","KORISNIK")
       // .antMatchers("/proizvod/**", "proizvodjac/**", "/reports/**", "/unos/**")
      //  .access("hasRole('ADMIN')")
        .and()
        .formLogin()
        .loginPage("/auth/loginPage")
        .loginProcessingUrl("/login")
        .usernameParameter("username")
        .passwordParameter("password")
        .defaultSuccessUrl("/auth/pocetna")
        .and().exceptionHandling()
        .accessDeniedPage("/auth/access_denied")
        .and()
        .logout()
        .logoutSuccessUrl("/")
        .and()
        .rememberMe().key("uniqueAndSecret");
	    http.csrf().disable();
	}

	
}